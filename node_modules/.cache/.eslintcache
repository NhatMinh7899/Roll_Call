[{"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\index.js":"1","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\App.js":"2","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\routes.js":"3","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\GlobalStyles.js":"4","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\theme\\index.js":"5","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\Home.js":"6","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\DashboardLayout.js":"7","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\NotFound.js":"8","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\Login.js":"9","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\theme\\shadows.js":"10","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\theme\\typography.js":"11","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\DashboardSidebar.js":"12","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\DashboardNavbar.js":"13","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\NavItem.js":"14","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\Student.js":"15","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\Teacher.js":"16","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\StudentListToolbar.js":"17","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\TeacherListResults.js":"18","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\StudentListResults.js":"19","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\TeacherListToolbar.js":"20","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\data\\studentdb.js":"21","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\utils\\getInitials.js":"22","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\Dashboard.js":"23","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\ClassControl.js":"24","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\AddAccount.js":"25","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Class\\ClassToolBar.js":"26","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Class\\ClassCard.js":"27","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Dashboard\\ChartRC.js":"28","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Dashboard\\TotalClass.js":"29","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Dashboard\\TotalStudent.js":"30","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Dashboard\\TotalTeacher.js":"31","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\AddClass.js":"32","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Class\\ListTeacher.js":"33","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Class\\ListStudent.js":"34"},{"size":551,"mtime":1623223372698,"results":"35","hashOfConfig":"36"},{"size":473,"mtime":1623223372698,"results":"37","hashOfConfig":"36"},{"size":1281,"mtime":1625150781460,"results":"38","hashOfConfig":"36"},{"size":709,"mtime":1622886186499,"results":"39","hashOfConfig":"36"},{"size":487,"mtime":1622886186532,"results":"40","hashOfConfig":"36"},{"size":5510,"mtime":1623224783094,"results":"41","hashOfConfig":"36"},{"size":1632,"mtime":1623244204885,"results":"42","hashOfConfig":"36"},{"size":0,"mtime":1623157948118,"results":"43","hashOfConfig":"36"},{"size":4371,"mtime":1625752379039,"results":"44","hashOfConfig":"36"},{"size":1645,"mtime":1622886186532,"results":"45","hashOfConfig":"36"},{"size":579,"mtime":1622886186532,"results":"46","hashOfConfig":"36"},{"size":3408,"mtime":1625110461625,"results":"47","hashOfConfig":"36"},{"size":1198,"mtime":1623244598058,"results":"48","hashOfConfig":"36"},{"size":1296,"mtime":1622886186499,"results":"49","hashOfConfig":"36"},{"size":736,"mtime":1625150230733,"results":"50","hashOfConfig":"36"},{"size":755,"mtime":1624283621510,"results":"51","hashOfConfig":"36"},{"size":1220,"mtime":1624283319453,"results":"52","hashOfConfig":"36"},{"size":5487,"mtime":1625151003446,"results":"53","hashOfConfig":"36"},{"size":5503,"mtime":1625149433841,"results":"54","hashOfConfig":"36"},{"size":1500,"mtime":1624284229035,"results":"55","hashOfConfig":"36"},{"size":1381,"mtime":1623332458620,"results":"56","hashOfConfig":"36"},{"size":145,"mtime":1622886186532,"results":"57","hashOfConfig":"36"},{"size":1421,"mtime":1625109834036,"results":"58","hashOfConfig":"36"},{"size":1600,"mtime":1625111146091,"results":"59","hashOfConfig":"36"},{"size":4325,"mtime":1625113082283,"results":"60","hashOfConfig":"36"},{"size":1455,"mtime":1625150783820,"results":"61","hashOfConfig":"36"},{"size":1880,"mtime":1625111092459,"results":"62","hashOfConfig":"36"},{"size":3122,"mtime":1625108444408,"results":"63","hashOfConfig":"36"},{"size":1482,"mtime":1625111470301,"results":"64","hashOfConfig":"36"},{"size":1344,"mtime":1625111471813,"results":"65","hashOfConfig":"36"},{"size":1534,"mtime":1625111466701,"results":"66","hashOfConfig":"36"},{"size":3835,"mtime":1625237249066,"results":"67","hashOfConfig":"36"},{"size":2411,"mtime":1625232570751,"results":"68","hashOfConfig":"36"},{"size":2412,"mtime":1625236595716,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"b9owk0",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"72"},"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\index.js",[],["150","151"],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\App.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\routes.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\GlobalStyles.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\theme\\index.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\Home.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\DashboardLayout.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\NotFound.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\Login.js",["152","153","154"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Image from '../images/ptithcm.jpg' \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${Image})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction Login(props) {\r\n  const username = useFormInput('');\r\n  const password = useFormInput('');\r\n  // const [username, setUsername] = useState('');\r\n  // const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n \r\n  // handle button click of login form\r\n  const handleLogin = () => {\r\n    // setError(null);\r\n    // setLoading(true);\r\n    // axios.post('https://be-checkin.herokuapp.com/api/user/login', { id: username.value, password: password.value })\r\n    // .then(response => {\r\n    //   setLoading(false);\r\n    //   setUserSession(response.data)\r\n    //   props.history.push('/dashboard');\r\n    // }).catch(() => {\r\n    //   setLoading(false);\r\n    //   if (error.response.status === 401) setError(error.response.data.message);\r\n    //   else setError(\"Something went wrong. Please try again later.\");\r\n    // });\r\n    // //props.history.push('/dashboard');\r\n    \r\n  }\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n    <CssBaseline />\r\n    <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"user\"\r\n            label=\"UserName\"\r\n            name=\"user\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            {...username}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            {...password}\r\n          />\r\n         \r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            onClick={handleLogin} disabled={loading}\r\n            Redirect=\"/app/dashboard\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n         \r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n          </Grid>       \r\n        </form>\r\n      </div>\r\n    </Grid>\r\n  </Grid>\r\n\r\n  );\r\n}\r\n \r\nconst useFormInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n \r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  }\r\n  return {\r\n    value,\r\n    onChange: handleChange\r\n  }\r\n}\r\n \r\nexport default Login;\r\n\r\n","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\theme\\shadows.js",["155"],"export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\theme\\typography.js",["156"],"export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\DashboardSidebar.js",["157"],"import { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport {\r\n  BarChart as BarChartIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  Users as UsersIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/lalisa.jpg',\r\n  jobTitle: 'Junior Developer',\r\n  name: 'Nhat Minh Bui'\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/app/dashboard',\r\n    icon: BarChartIcon,\r\n    title: 'Dashboard'\r\n  },\r\n  {\r\n    href: '/app/student',\r\n    icon: UsersIcon,\r\n    title: 'Student'\r\n  },\r\n  {\r\n    href: '/app/teacher',\r\n    icon: ShoppingBagIcon,\r\n    title: 'Teacher'\r\n  },\r\n  {\r\n    href: '/app/class',\r\n    icon: ShoppingBagIcon,\r\n    title: 'Class'\r\n  }\r\n];\r\n\r\nconst DashboardSidebar = ({ onMobileClose, openMobile }) => {\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%'\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          alignItems: 'center',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Avatar\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          sx={{\r\n            cursor: 'pointer',\r\n            width: 64,\r\n            height: 64\r\n          }}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box sx={{ p: 2 }}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box sx={{ flexGrow: 1 }} />\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          m: 2,\r\n          p: 2\r\n        }}\r\n      >\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden lgDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          open\r\n          variant=\"persistent\"\r\n          PaperProps={{\r\n            sx: {\r\n              width: 256,\r\n              top: 64,\r\n              height: 'calc(100% - 64px)'\r\n            }\r\n          }}\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nDashboardSidebar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nDashboardSidebar.defaultProps = {\r\n  onMobileClose: () => { },\r\n  openMobile: false\r\n};\r\n\r\nexport default DashboardSidebar;\r\n","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\DashboardNavbar.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\NavItem.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\Student.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\Teacher.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\StudentListToolbar.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\TeacherListResults.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\StudentListResults.js",["158"],"import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport getInitials from '../utils/getInitials';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Link as RouterLink} from 'react-router-dom';\r\n\r\nconst CustomerListResults = ({ student, ...rest }) => {\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = student.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card {...rest}>\r\n      <PerfectScrollbar>\r\n        <Box sx={{ minWidth: 1050 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === student.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0\r\n                      && selectedCustomerIds.length < student.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Id\r\n                </TableCell>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Role\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {student.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      sx={{\r\n                        alignItems: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      <Avatar\r\n                        src={customer.img}\r\n                        sx={{ mr: 2 }}\r\n                      >\r\n                        {getInitials(customer.name)}\r\n                      </Avatar>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.name}\r\n                      </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.role}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <RouterLink to=\"/app/additem\">\r\n                    <EditIcon sx={{ mr: 2}}/>\r\n                    </RouterLink>                  \r\n                   <DeleteIcon />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={student.length}\r\n        onPageChange={handlePageChange}\r\n        onRowsPerPageChange={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nCustomerListResults.propTypes = {\r\n  student: PropTypes.array.isRequired\r\n};\r\n\r\nexport default CustomerListResults;\r\n","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\TeacherListToolbar.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\data\\studentdb.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\utils\\getInitials.js",["159"],"export default (name = '') => name\r\n  .replace(/\\s+/, ' ')\r\n  .split(' ')\r\n  .slice(0, 2)\r\n  .map((v) => v && v[0].toUpperCase())\r\n  .join('');\r\n","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\Dashboard.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\ClassControl.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\AddAccount.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Class\\ClassToolBar.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Class\\ClassCard.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Dashboard\\ChartRC.js",["160"],"import { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  useTheme,\r\n  colors\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nconst Sales = (props) => {\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        backgroundColor: colors.indigo[500],\r\n        data: [18, 5, 19, 27, 29, 19, 20],\r\n        label: 'Vắng'\r\n      },\r\n      {\r\n        backgroundColor: colors.grey[200],\r\n        data: [11, 20, 12, 29, 30, 25, 13],\r\n        label: 'Có mặt'\r\n      }\r\n    ],\r\n    labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug']\r\n  };\r\n\r\n  const options = {\r\n    animation: false,\r\n    cornerRadius: 20,\r\n    layout: { padding: 0 },\r\n    legend: { display: false },\r\n    maintainAspectRatio: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          barThickness: 12,\r\n          maxBarThickness: 10,\r\n          barPercentage: 0.5,\r\n          categoryPercentage: 0.5,\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary\r\n          },\r\n          gridLines: {\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: theme.palette.text.secondary,\r\n            beginAtZero: true,\r\n            min: 0\r\n          },\r\n          gridLines: {\r\n            borderDash: [2],\r\n            borderDashOffset: [2],\r\n            color: theme.palette.divider,\r\n            drawBorder: false,\r\n            zeroLineBorderDash: [2],\r\n            zeroLineBorderDashOffset: [2],\r\n            zeroLineColor: theme.palette.divider\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    tooltips: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      borderColor: theme.palette.divider,\r\n      borderWidth: 1,\r\n      enabled: true,\r\n      footerFontColor: theme.palette.text.secondary,\r\n      intersect: false,\r\n      mode: 'index',\r\n      titleFontColor: theme.palette.text.primary\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...props}>\r\n      <CardHeader\r\n        action={(\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days\r\n          </Button>\r\n        )}\r\n        title=\"Roll-Call\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <Box\r\n          sx={{\r\n            height: 400,\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          p: 2\r\n        }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          endIcon={<ArrowRightIcon />}\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Sales;","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Dashboard\\TotalClass.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Dashboard\\TotalStudent.js",[],"C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Dashboard\\TotalTeacher.js",["161"],"import {\r\n    Avatar,\r\n    Box,\r\n    Card,\r\n    CardContent,\r\n    Grid,\r\n    Typography\r\n  } from '@material-ui/core';\r\n  import { green } from '@material-ui/core/colors';\r\n  import ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\n  import PeopleIcon from '@material-ui/icons/PeopleOutlined';\r\n  import { Link } from 'react-router-dom';\r\n\r\n  const TotalTeacher = (props) => (\r\n    <Card {...props}>\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          sx={{ justifyContent: 'space-between' }}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              TOTAL TEACHER\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              50\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar\r\n              sx={{\r\n                backgroundColor: green[600],\r\n                height: 56,\r\n                width: 56\r\n              }}\r\n            >\r\n                <Link to=\"/app/teacher\">\r\n                <PeopleIcon />\r\n                </Link>\r\n              \r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          sx={{\r\n            alignItems: 'center',\r\n            display: 'flex',\r\n            pt: 2\r\n          }}\r\n        >\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n  \r\n  export default TotalTeacher;","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\pages\\AddClass.js",["162","163"],"import { Helmet } from \"react-helmet\";\r\nimport { Box, Container, Grid, TextField, Select, InputLabel } from \"@material-ui/core\";\r\nimport ListStudent from \"../component/Class/ListStudent\";\r\nimport ListTeacher from \"../component/Class/ListTeacher\";\r\nimport Student from \"../data/studentdb\";\r\nimport { useState } from \"react\";\r\n\r\n//add mutiple item\r\n// const handleChangeMultiple = (event) => {\r\n//   const { options } = event.target;\r\n//   const value = [];\r\n//   for (let i = 0, l = options.length; i < l; i += 1) {\r\n//     if (options[i].selected) {\r\n//       value.push(options[i].value);\r\n//     }\r\n//   }\r\n//   setPersonName(value);\r\n// };\r\n\r\nconst states = [\r\n  {\r\n    value: \"2A08\",\r\n    label: \"2A08\",\r\n  },\r\n  {\r\n    value: \"2A16\",\r\n    label: \"2A16\",\r\n  },\r\n  {\r\n    value: \"2A27\",\r\n    label: \"2A27\",\r\n  },\r\n];\r\n\r\nconst AddClass = () => {\r\n  const [values, setValues] = useState({\r\n    className: \"\",\r\n    room: \"\",\r\n    credit: \"\",\r\n    datestart: \"\",\r\n    id_student: [],\r\n    id_teacher: \"\",\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>AddClass</title>\r\n      </Helmet>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: \"background.default\",\r\n          minHeight: \"100%\",\r\n          py: 3,\r\n        }}\r\n      >\r\n        <Container maxWidth={false}>\r\n          <Grid container spacing={6}>\r\n            <Grid item lg={3}>\r\n              <TextField\r\n                name=\"className\"\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Required\"\r\n                defaultValue=\"CLassName\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={3}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select Room\"\r\n                name=\"room\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option key={option.value} value={option.value}>\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item lg={3}>\r\n              <TextField\r\n                name=\"credit\"\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Required\"\r\n                defaultValue=\"Credits\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={3}>\r\n              <TextField\r\n                id=\"date\"\r\n                label=\"Birthday\"\r\n                type=\"date\"\r\n                defaultValue=\"Now\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={8}>\r\n              <InputLabel shrink htmlFor=\"select-multiple-native\">\r\n                Choose Teacher\r\n              </InputLabel>\r\n              <TextField\r\n                fullWidth\r\n                name=\"room\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                \r\n                variant=\"outlined\"\r\n              >\r\n                {Student.map((name) => (\r\n                  <option key={name} value={name}>\r\n                    {name.name}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n\r\n            <Grid item lg={12}>\r\n              <ListStudent student={Student} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddClass;\r\n","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Class\\ListTeacher.js",["164"],"import {Card, Box, Table, TableHead, TableRow, TableCell, TableBody, Checkbox, Typography, Avatar } from '@material-ui/core';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport getInitials from '../../utils/getInitials';\r\nimport { useState } from 'react';\r\n\r\nconst ListTeacher = ({teacher, ...rest}) => {\r\n    const [limit, setLimit] = useState(10);\r\n    return (\r\n        <Card>\r\n        <PerfectScrollbar>\r\n        <Box sx={{ minWidth: 550 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox/>\r\n                </TableCell>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Grade\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {teacher.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                \r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      sx={{\r\n                        alignItems: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      <Avatar\r\n                        src={customer.img}\r\n                        sx={{  }}\r\n                      >\r\n                        {getInitials(customer.name)}\r\n                      </Avatar>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.name}\r\n                      </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.role}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      </Card>\r\n    )\r\n};\r\n\r\nexport default ListTeacher;","C:\\Users\\bnm78\\Desktop\\New folder\\FileTmp\\roll-call\\src\\component\\Class\\ListStudent.js",["165"],"import {Card, Box, Table, TableHead, TableRow, TableCell, TableBody, Checkbox, Typography, Avatar } from '@material-ui/core';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport getInitials from '../../utils/getInitials';\r\nimport { useState } from 'react';\r\n\r\n\r\nconst ListStudent = ({student, ...rest}) => {\r\n    const [limit, setLimit] = useState(10);\r\n    return (\r\n        <Card>\r\n        <PerfectScrollbar>\r\n        <Box sx={{ minWidth: 1050 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox/>\r\n                </TableCell>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  MSSV\r\n                </TableCell>\r\n                <TableCell>\r\n                  Grade\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {student.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                \r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      sx={{\r\n                        alignItems: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      <Avatar\r\n                        src={customer.img}\r\n                        sx={{ }}\r\n                      >\r\n                        {getInitials(customer.name)}\r\n                      </Avatar>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.name}\r\n                      </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.role}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      </Card>\r\n    )\r\n};\r\n\r\nexport default ListStudent;",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":50,"column":10,"nodeType":"172","messageId":"173","endLine":50,"endColumn":15},{"ruleId":"170","severity":1,"message":"174","line":50,"column":17,"nodeType":"172","messageId":"173","endLine":50,"endColumn":25},{"ruleId":"170","severity":1,"message":"175","line":51,"column":19,"nodeType":"172","messageId":"173","endLine":51,"endColumn":29},{"ruleId":"176","severity":1,"message":"177","line":1,"column":1,"nodeType":"178","endLine":27,"endColumn":3},{"ruleId":"176","severity":1,"message":"179","line":1,"column":1,"nodeType":"178","endLine":35,"endColumn":3},{"ruleId":"180","severity":1,"message":"181","line":56,"column":6,"nodeType":"182","endLine":56,"endColumn":25,"suggestions":"183"},{"ruleId":"170","severity":1,"message":"184","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":14},{"ruleId":"176","severity":1,"message":"185","line":1,"column":1,"nodeType":"178","endLine":6,"endColumn":13},{"ruleId":"170","severity":1,"message":"186","line":12,"column":8,"nodeType":"172","messageId":"173","endLine":12,"endColumn":25},{"ruleId":"170","severity":1,"message":"187","line":10,"column":10,"nodeType":"172","messageId":"173","endLine":10,"endColumn":25},{"ruleId":"170","severity":1,"message":"188","line":2,"column":43,"nodeType":"172","messageId":"173","endLine":2,"endColumn":49},{"ruleId":"170","severity":1,"message":"189","line":4,"column":8,"nodeType":"172","messageId":"173","endLine":4,"endColumn":19},{"ruleId":"170","severity":1,"message":"190","line":7,"column":19,"nodeType":"172","messageId":"173","endLine":7,"endColumn":27},{"ruleId":"170","severity":1,"message":"190","line":8,"column":19,"nodeType":"172","messageId":"173","endLine":8,"endColumn":27},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","'setLoading' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onMobileClose' and 'openMobile'. Either include them or remove the dependency array. If 'onMobileClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["193"],"'moment' is defined but never used.","Assign arrow function to a variable before exporting as module default","'ArrowDropDownIcon' is defined but never used.","'ArrowUpwardIcon' is defined but never used.","'Select' is defined but never used.","'ListTeacher' is defined but never used.","'setLimit' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},"Update the dependencies array to be: [location.pathname, onMobileClose, openMobile]",{"range":"196","text":"197"},[1104,1123],"[location.pathname, onMobileClose, openMobile]"]